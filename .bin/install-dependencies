#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

BASE_DIR=$( realpath $( dirname "${BASH_SOURCE[0]}" )/../ )

IS_DEBIAN="$(type apt-get 2>/dev/null 1>&2 && echo "true" || echo "false")"

function install-apt() {
    package="$1"

    if [[ "$IS_DEBIAN" == "false" ]]; then
        echo "Unknown OS cannot install $package with apt-get"
        exit 1
    fi

    sudo apt-get update
    sudo apt-get install -y $package
}

function packwiz-path() {
    packwiz_path="$(command -v packwiz || true)"
    if [[ -z "$packwiz_path" ]]; then
        packwiz_path="$BASE_DIR/.bin/packwiz"
    fi

    if [[ -f "$packwiz_path" ]]; then
        echo "$packwiz_path"
    fi
}

to_install=""
zip_installed="$(type zip 2>/dev/null 1>&2 && echo "true" || echo "false")"
if [[ "$zip_installed" == "false" ]]; then
    to_install="$to_install zip"
fi

jq_installed="$(type jq 2>/dev/null 1>&2 && echo "true" || echo "false")"
if [[ "$jq_installed" == "false" ]]; then
    to_install="$to_install jq"
fi

java_installed="$(type java 2>/dev/null 1>&2 && echo "true" || echo "false")"
if [[ "$java_installed" == "false" ]]; then
    to_install="$to_install default-jre"
fi

python_installed="$(type python3 2>/dev/null 1>&2 && echo "true" || echo "false")"
if [[ "$python_installed" == "false" ]]; then
    to_install="$to_install python3"
fi

if [[ ! -z "$to_install" ]]; then
    echo "Installing apt packages: $to_install"
    install-apt "$to_install"
fi

if [[ -z "$(packwiz-path)" ]]; then
    echo "Installing packwiz..."
    curl -sL https://nightly.link/packwiz/packwiz/workflows/go/main/Linux%2064-bit%20x86.zip -o packwiz.zip
    unzip packwiz.zip
    rm packwiz.zip
    mv packwiz .bin/packwiz
fi

echo "Dependencies installed"
